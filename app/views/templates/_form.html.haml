= simple_form_for @template, as: :template, remote: true, html: { class: 'template-form' } do |f|

  = f.input :type, as: :select, label: t("templates.type"), collection: ::Template.platform_names, input_html: { class: "form-control-sm" }, label_html: { class: "form-label" }, include_blank: false

  = f.input :content, label: t("templates.content"), input_html: { class: "form-control-sm" }, label_html: { class: "form-label" }

  .form-group.template_image.mb-4
    %label.form-label= t("templates.image")

    .d-flex
      .position-relative
        %label.image-preview-wrapper.m-0
          - image_url = @template.image.presence || 'default_image.png'
          = image_tag image_url, class: 'image-preview', 'data-default' => image_path('default_image.png')

          = f.input :image, as: :file, wrapper_html: { class: "d-none" }

        .btn-delete.pointer.position-absolute.text-center{class: ('d-none' unless @template.image.present?) }
          %i.fas.fa-trash-alt.text-white
          %input.d-none{ type: :checkbox, name: "purge_image"}

  .form-group.template_audio
    %label.form-label
      = t("templates.audio")

    %label.d-block
      .btn.btn-secondary.btn-sm.btn-choose-file
        = t("templates.choose_audio")
      %span#audio-name
      = f.input_field :audio, as: :file, value: @template&.audio.try(:signed_id), name: "template[audio]", class: "d-none", accept: "audio/mp3"

    .audio-container
      - audio_blob_url = @template.audio.attached? ? url_for(@template.audio) : ''
      %audio#audio.mt-1.audio-player-preview{ controls: "controls", src: audio_blob_url }

    .fail-validation.invalid-audio
      = f.object.errors.full_messages_for(:audio).to_sentence

  .form-group
    .d-flex.justify-content-around.my-4
      %label.item.text-center
        = image_tag "incomplete.svg"
        %p.status-text.m-0
          = t("templates.index.incomplete")
        %input{ type: "radio", value: 0, name: "template[status]", checked: @template.incomplete? }

      %label.item.text-center
        = image_tag "complete.svg"
        %p.status-text.m-0
          = t("templates.index.complete")
        %input{ type: "radio", value: 1, name: "template[status]", checked: @template.completed? }

      %label.item.text-center
        = image_tag "incorrect.svg"
        %p.status-text.m-0
          = t("templates.index.incorrect")
        %input{ type: "radio", value: 2, name: "template[status]", checked: @template.incorrect? }

    .fail-validation.invalid-status
      = f.object.errors.full_messages_for(:status).to_sentence

  .text-right
    %button.btn.btn-secondary{"data-dismiss" => "modal", :type => "button"}
      = t("shared.cancel")
    = f.submit t("shared.save"), class: "btn btn-primary"
